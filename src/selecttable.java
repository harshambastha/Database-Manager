
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Harsh
 */
public class selecttable extends javax.swing.JFrame {
Statement stmt;
Connection con;
ResultSet rs;
    /**
     * Creates new form selecttable
     */
    public selecttable() {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        greaterthan.setVisible(false);
    lessthan.setVisible(false);
    greaterthanequalto.setVisible(false);
    lessthanequalto.setVisible(false);
    equalto.setVisible(false);
    notequalto.setVisible(false);
    
    greaterthan1.setVisible(false);
    lessthan1.setVisible(false);
    greaterthanequalto1.setVisible(false);
    lessthanequalto1.setVisible(false);
    equalto1.setVisible(false);
    notequalto1.setVisible(false);
    jLabel5.setVisible(false);
    
    asc.setVisible(false);
    desc.setVisible(false);
   
    jComboBox1.setVisible(false);
    jLabel1.setVisible(false);
    jTextField2.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        calc = new javax.swing.ButtonGroup();
        operators = new javax.swing.ButtonGroup();
        operators1 = new javax.swing.ButtonGroup();
        order = new javax.swing.ButtonGroup();
        panel = new javax.swing.JPanel();
        fv = new javax.swing.JTextField();
        panelcb = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        seltable = new javax.swing.JTable();
        jCheckBox1 = new javax.swing.JCheckBox();
        orderby = new javax.swing.JCheckBox();
        avg = new javax.swing.JRadioButton();
        count = new javax.swing.JRadioButton();
        sum = new javax.swing.JRadioButton();
        min = new javax.swing.JRadioButton();
        max = new javax.swing.JRadioButton();
        columnselect = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        greaterthan = new javax.swing.JRadioButton();
        lessthan = new javax.swing.JRadioButton();
        lessthanequalto = new javax.swing.JRadioButton();
        greaterthanequalto = new javax.swing.JRadioButton();
        notequalto = new javax.swing.JRadioButton();
        where1 = new javax.swing.JCheckBox();
        equalto = new javax.swing.JRadioButton();
        greaterthan1 = new javax.swing.JRadioButton();
        lessthan1 = new javax.swing.JRadioButton();
        lessthanequalto1 = new javax.swing.JRadioButton();
        greaterthanequalto1 = new javax.swing.JRadioButton();
        equalto1 = new javax.swing.JRadioButton();
        notequalto1 = new javax.swing.JRadioButton();
        asc = new javax.swing.JRadioButton();
        desc = new javax.swing.JRadioButton();
        jButton2 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jc = new javax.swing.JComboBox<>();
        jButton4 = new javax.swing.JButton();

        jLabel2.setText("Enter the first value");

        jLabel4.setText("Select Column");

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fv, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelcb, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(panelcb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(23, 23, 23)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(fv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(55, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        seltable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(seltable);

        jCheckBox1.setText("Where");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        orderby.setText("Order By");
        orderby.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderbyActionPerformed(evt);
            }
        });

        calc.add(avg);
        avg.setText("AVG");

        calc.add(count);
        count.setText("COUNT");

        calc.add(sum);
        sum.setText("SUM");

        calc.add(min);
        min.setText("Min");

        calc.add(max);
        max.setText("Max");

        columnselect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                columnselectActionPerformed(evt);
            }
        });

        jButton1.setText("Calculate");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        operators.add(greaterthan);
        greaterthan.setText(">");
        greaterthan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                greaterthanActionPerformed(evt);
            }
        });

        operators.add(lessthan);
        lessthan.setText("<");

        operators.add(lessthanequalto);
        lessthanequalto.setText("<=");

        operators.add(greaterthanequalto);
        greaterthanequalto.setText(">=");

        operators.add(notequalto);
        notequalto.setText("!=");

        where1.setText("Where");
        where1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                where1ActionPerformed(evt);
            }
        });

        operators.add(equalto);
        equalto.setText("=");

        operators1.add(greaterthan1);
        greaterthan1.setText(">");

        operators1.add(lessthan1);
        lessthan1.setText("<");

        operators1.add(lessthanequalto1);
        lessthanequalto1.setText("<=");

        operators1.add(greaterthanequalto1);
        greaterthanequalto1.setText(">=");

        operators1.add(equalto1);
        equalto1.setText("=");

        operators1.add(notequalto1);
        notequalto1.setText("!=");

        order.add(asc);
        asc.setText("Ascending");

        order.add(desc);
        desc.setText("Descending");

        jButton2.setText("Show");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Value");

        jButton3.setText("Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel5.setText("Operators");

        jButton4.setText("Go");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(count)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(greaterthan)
                                .addGap(18, 18, 18)
                                .addComponent(lessthan))
                            .addComponent(where1))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(columnselect, 0, 125, Short.MAX_VALUE)
                                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lessthanequalto)
                                        .addGap(18, 18, 18)
                                        .addComponent(greaterthanequalto)
                                        .addGap(18, 18, 18)
                                        .addComponent(equalto)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                                .addComponent(notequalto)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(avg)
                            .addComponent(sum))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(min)
                            .addComponent(max))
                        .addGap(31, 31, 31))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3)
                .addGap(283, 283, 283))
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 383, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(135, 135, 135))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(136, 136, 136)
                                .addComponent(jButton4))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(orderby)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jc, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(greaterthan1)
                                            .addGap(18, 18, 18)
                                            .addComponent(lessthan1))
                                        .addComponent(asc))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lessthanequalto1)
                                            .addGap(10, 10, 10)
                                            .addComponent(greaterthanequalto1)
                                            .addGap(18, 18, 18)
                                            .addComponent(equalto1)
                                            .addGap(18, 18, 18)
                                            .addComponent(notequalto1))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(desc)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jButton2))))))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(avg)
                            .addComponent(min))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sum)
                            .addComponent(max))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(count)
                            .addComponent(columnselect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(where1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(greaterthan)
                            .addComponent(lessthan)
                            .addComponent(lessthanequalto)
                            .addComponent(greaterthanequalto)
                            .addComponent(notequalto)
                            .addComponent(equalto))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jCheckBox1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jButton4))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(greaterthan1)
                    .addComponent(lessthan1)
                    .addComponent(lessthanequalto1)
                    .addComponent(greaterthanequalto1)
                    .addComponent(equalto1)
                    .addComponent(notequalto1))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(orderby)
                    .addComponent(jc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(asc)
                    .addComponent(desc)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
try{
        String option=(String) columnselect.getSelectedItem();
String radio=null; 
if(avg.isSelected())
       radio="avg";
if(min.isSelected())
    radio="min";
if(sum.isSelected())
    radio="sum";
if(max.isSelected())
    radio="max";
if(count.isSelected())
    radio="count";
String sql=null;
switch(radio)
{
    case "avg":
        sql="select AVG("+option+") from "+table.table;
        break;
    case "min":
        sql="select MIN("+option+") from "+table.table;
        break;
    case "sum":
        sql="select SUM("+option+") from "+table.table;
        break;
    case "max":
        sql="select MAX("+option+") from "+table.table;
        break;
    case "count":
        sql="select COUNT("+option+") from "+table.table;
        break;
    default:
        break;
}

if(greaterthan.isSelected())
{
    sql+=" where "+jComboBox1.getSelectedItem().toString()+" > "+jTextField2.getText();    
}
if(lessthan.isSelected())
    sql+=" where "+jComboBox1.getSelectedItem().toString()+" < "+jTextField2.getText();
if(lessthanequalto.isSelected())
    sql+=" where "+jComboBox1.getSelectedItem().toString()+" <= "+jTextField2.getText();
if(greaterthanequalto.isSelected())
    sql+=" where "+jComboBox1.getSelectedItem().toString()+" >= "+jTextField2.getText();
if(equalto.isSelected())
    sql+=" where "+jComboBox1.getSelectedItem().toString()+" = "+jTextField2.getText();
if(notequalto.isSelected())    
    sql+=" where "+jComboBox1.getSelectedItem().toString()+" != "+jTextField2.getText();
connect();
stmt=con.createStatement();
rs=stmt.executeQuery(sql);
if(rs.next())
jTextField1.setText(Integer.toString(rs.getInt(1)));

}   catch (SQLException ex) {
       ex.printStackTrace();
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void greaterthanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_greaterthanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_greaterthanActionPerformed

    private void where1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_where1ActionPerformed
if(where1.isSelected()){
    greaterthan.setVisible(true);
    lessthan.setVisible(true);
    greaterthanequalto.setVisible(true);
    lessthanequalto.setVisible(true);
    equalto.setVisible(true);
    notequalto.setVisible(true);
    jComboBox1.setVisible(true);
    jTextField2.setVisible(true);
    jLabel1.setVisible(true);
}
if(!where1.isSelected()){
    greaterthan.setVisible(false);
    lessthan.setVisible(false);
    greaterthanequalto.setVisible(false);
    lessthanequalto.setVisible(false);
    equalto.setVisible(false);
    notequalto.setVisible(false);
    jComboBox1.setVisible(false);
}
    }//GEN-LAST:event_where1ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
if(jCheckBox1.isSelected())
{
greaterthan1.setVisible(true);
    lessthan1.setVisible(true);
    greaterthanequalto1.setVisible(true);
    lessthanequalto1.setVisible(true);
    equalto1.setVisible(true);
    notequalto1.setVisible(true);
    jLabel5.setVisible(true);
}

if(jCheckBox1.isSelected()==false)
{
    greaterthan1.setVisible(false);
    lessthan1.setVisible(false);
    greaterthanequalto1.setVisible(false);
    lessthanequalto1.setVisible(false);
    equalto1.setVisible(false);
    notequalto1.setVisible(false);
    jLabel5.setVisible(false);
}
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
try{
        String sql1="select * from "+table.table+" ";  
        String get=(String) jc.getSelectedItem();
    
if(asc.isSelected())
    sql1+=" order by "+get+" asc";
if(desc.isSelected())
    sql1+=" order by "+get+" desc";


connect();
stmt=con.prepareStatement(sql1);
rs=stmt.executeQuery(sql1);
seltable.setModel(DbUtils.resultSetToTableModel(rs));
}catch(SQLException e)
{
    e.printStackTrace();
}
    }//GEN-LAST:event_jButton2ActionPerformed

    private void orderbyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderbyActionPerformed
if(orderby.isSelected())
{
   asc.setVisible(true);
   desc.setVisible(true);
}
if(orderby.isSelected()==false)
{
   asc.setVisible(false);
   desc.setVisible(false);
}

    }//GEN-LAST:event_orderbyActionPerformed

    private void columnselectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_columnselectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_columnselectActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

String sql1=null;
String sql2="";
String operator=null;
if(greaterthan1.isSelected())
operator=">";
if(lessthan1.isSelected())
operator="<";    
if(lessthanequalto1.isSelected())
operator="<=";    
if(greaterthanequalto1.isSelected())
operator=">=";    
if(equalto1.isSelected())
operator="=";    
if(notequalto1.isSelected())    
operator="!=";
        String get=(String) jc.getSelectedItem();
if(asc.isSelected())
    sql2+=" order by "+get+" asc";
if(desc.isSelected())
    sql2+=" order by "+get+" desc";
            int option=JOptionPane.showConfirmDialog(null,panel,"OPTION",JOptionPane.YES_NO_OPTION);
                if(option==JOptionPane.YES_OPTION)
                {
                    String first=fv.getText().toString();
                    String c=(String) panelcb.getSelectedItem();
                    sql1="select * from "+table.table+" where "+c+" "+operator+" '"+first+"'"+sql2;
                    System.out.print(sql1);
                                      
    try {
        connect();
        stmt=con.prepareStatement(sql1);
        rs=stmt.executeQuery(sql1);
seltable.setModel(DbUtils.resultSetToTableModel(rs));
    } catch (SQLException ex) {
        Logger.getLogger(selecttable.class.getName()).log(Level.SEVERE, null, ex);
    }

                }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
new datatable().setVisible(true);
this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(selecttable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(selecttable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(selecttable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(selecttable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new selecttable().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton asc;
    private javax.swing.JRadioButton avg;
    private javax.swing.ButtonGroup calc;
    public static javax.swing.JComboBox<String> columnselect;
    private javax.swing.JRadioButton count;
    private javax.swing.JRadioButton desc;
    private javax.swing.JRadioButton equalto;
    private javax.swing.JRadioButton equalto1;
    private javax.swing.JTextField fv;
    private javax.swing.JRadioButton greaterthan;
    private javax.swing.JRadioButton greaterthan1;
    private javax.swing.JRadioButton greaterthanequalto;
    private javax.swing.JRadioButton greaterthanequalto1;
    public static javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBox jCheckBox1;
    public static javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    public static javax.swing.JComboBox<String> jc;
    private javax.swing.JRadioButton lessthan;
    private javax.swing.JRadioButton lessthan1;
    private javax.swing.JRadioButton lessthanequalto;
    private javax.swing.JRadioButton lessthanequalto1;
    private javax.swing.JRadioButton max;
    private javax.swing.JRadioButton min;
    private javax.swing.JRadioButton notequalto;
    private javax.swing.JRadioButton notequalto1;
    private javax.swing.ButtonGroup operators;
    private javax.swing.ButtonGroup operators1;
    private javax.swing.ButtonGroup order;
    private javax.swing.JCheckBox orderby;
    private javax.swing.JPanel panel;
    public static javax.swing.JComboBox<String> panelcb;
    public static javax.swing.JTable seltable;
    private javax.swing.JRadioButton sum;
    private javax.swing.JCheckBox where1;
    // End of variables declaration//GEN-END:variables
public void connect() {
       try{
       Class.forName("com.mysql.jdbc.Driver");
       System.out.println("Connection Success");
   }
   catch (ClassNotFoundException cnfe){
       System.out.println("Connection Failed"+cnfe);
   }
   String url="jdbc:mysql://localhost:3306/"+db.get;
   try{
       con = DriverManager.getConnection(url,"root","root");
       System.out.println("Database Connected");
   }
   catch (SQLException se){
       System.out.println("No Database"+se);
   }
    }
}
